<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[几个有趣的命令（一）]]></title>
    <url>%2Fp%2Fa074.html</url>
    <content type="text"><![CDATA[首先我是一个 Mac 党，但是对于 Linux 也尤为喜爱，他们上面有那么一些命令总是那么饶有趣味，又由于都是类 Unix 系统，很多命令都是通用的，本文的代码也都是在 Mac 上面完成 curl一个大名鼎鼎的命令，作为一个程序员，如果 curl 都不知道，那就真的很尴尬，主要是做网络请求 直接返回下载文件内容到终端1$ curl baidu.com 123&lt;html&gt;&lt;meta http-equiv="refresh" content="0;url=http://www.baidu.com/"&gt;&lt;/html&gt; 下载文件到指定文件12$ curl baidu.com -o baidu.html$ cat baidu.html 123&lt;html&gt;&lt;meta http-equiv="refresh" content="0;url=http://www.baidu.com/"&gt;&lt;/html&gt; 下载文件到默认文件123$ curl https://nodejs.org/dist/v8.12.0/node-v8.12.0.pkg -O$ ls node-v8.12.0.pkgnode-v8.12.0.pkg 查看返回头信息1$ curl -i baidu.com 12345678910111213141516HTTP/1.1 200 OKDate: Sat, 20 Oct 2018 14:30:47 GMTServer: ApacheLast-Modified: Tue, 12 Jan 2010 13:48:00 GMTETag: &quot;51-47cf7e6ee8400&quot;Accept-Ranges: bytesContent-Length: 81Cache-Control: max-age=86400Expires: Sun, 21 Oct 2018 14:30:47 GMTConnection: Keep-AliveContent-Type: text/htmlProxy-Connection: keep-alive&lt;html&gt;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://www.baidu.com/&quot;&gt;&lt;/html&gt; 查看请求的整个过程1$ curl -v baidu.com 12345678910111213141516171819202122232425* Rebuilt URL to: baidu.com/* Trying 123.125.115.110...* TCP_NODELAY set* Connected to baidu.com (123.125.115.110) port 80 (#0)&gt; GET / HTTP/1.1&gt; Host: baidu.com&gt; User-Agent: curl/7.54.0&gt; Accept: */*&gt; &lt; HTTP/1.1 200 OK&lt; Date: Sat, 20 Oct 2018 14:40:22 GMT&lt; Server: Apache&lt; Last-Modified: Tue, 12 Jan 2010 13:48:00 GMT&lt; ETag: &quot;51-47cf7e6ee8400&quot;&lt; Accept-Ranges: bytes&lt; Content-Length: 81&lt; Cache-Control: max-age=86400&lt; Expires: Sun, 21 Oct 2018 14:40:22 GMT&lt; Connection: Keep-Alive&lt; Content-Type: text/html&lt; &lt;html&gt;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://www.baidu.com/&quot;&gt;&lt;/html&gt;* Connection #0 to host baidu.com left intact 发送 Post 请求不带参数1$ curl -X POST baidu.com form形式将以 Content-Type: application/x-www-form-urlencoded 形式提交 1$ curl -X POST -d 'a=b' baidu.com json形式将以 Content-Type: application/json 形式提交 1$ curl -X POST baidu.com -H 'content-type: application/json' -d '&#123;"a":"b"&#125;' 发送其他 method 请求如果你们公司也在用 restful api ，很幸运的是 curl 会是一个好帮手 1234$ curl -X GET baidu.com$ curl -X POST baidu.com$ curl -X PUT baidu.com$ curl -X DELETE baidu.com 发送带自定义 header 请求1$ curl -X POST -H 'custom-key: custom-value' baidu.com 查看当前 ip这算是一个非常实用的技巧了，因为我这里开了代理，所以网络 ip 显示的是美国 12$ curl ip.cn当前 IP：138.128.193.*** 来自：美国 pingping(packet internet groper)通过发送icmp(internet control messages protocol)协议包查看当前机器和目标机器的连通性，mac上面如果不指定 ping 次数，则会一直执行 1$ ping baidu.com ctrl-c 强行停止1234567PING baidu.com (123.125.115.110): 56 data bytes64 bytes from 123.125.115.110: icmp_seq=0 ttl=55 time=111.843 ms64 bytes from 123.125.115.110: icmp_seq=1 ttl=55 time=113.706 ms64 bytes from 123.125.115.110: icmp_seq=2 ttl=55 time=26.261 ms64 bytes from 123.125.115.110: icmp_seq=3 ttl=55 time=25.522 ms64 bytes from 123.125.115.110: icmp_seq=4 ttl=55 time=26.935 ms... 通过 -c 指定执行次数 1$ ping -c3 baidu.com 12345678PING baidu.com (123.125.115.110): 56 data bytes64 bytes from 123.125.115.110: icmp_seq=0 ttl=55 time=232.282 ms64 bytes from 123.125.115.110: icmp_seq=1 ttl=55 time=44.364 ms64 bytes from 123.125.115.110: icmp_seq=2 ttl=55 time=38.667 ms--- baidu.com ping statistics ---3 packets transmitted, 3 packets received, 0.0% packet lossround-trip min/avg/max/stddev = 38.667/105.104/232.282/89.958 ms 执行结束会一段对本次所以请求的汇报，发送了多少次包，多少返回了，多少丢失了，round-trip time 时间 最短/平均/最长/标准差 traceroutetraceroute 其实也是发送 icmp 协议报文查看到达目标 ip 中间经过所有的路由信息 1$ traceroute www.baidu.com 结果如下123456traceroute: Warning: www.baidu.com has multiple addresses; using 61.135.169.121traceroute to www.a.shifen.com (61.135.169.121), 64 hops max, 52 byte packets 1 * * * 2 * * * 3 * * * 4 * * * 尴尬的是后面直接星号了，因为大多数网关都禁止对 icmp 报文作出响应]]></content>
      <categories>
        <category>开发笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[mac上几个有趣的命令（一）]]></title>
    <url>%2Fp%2Fa074.html</url>
    <content type="text"><![CDATA[首先我是一个 Mac 党，但是对于 Linux 也尤为喜爱，他们上面有那么一些命令总是那么饶有趣味，又由于都是类 Unix 系统，很多命令都是通用的，本文的代码也都是在 Mac 上面完成 curl一个大名鼎鼎的命令，作为一个程序员，如果 curl 都不知道，那就真的很尴尬，主要是做网络请求 直接返回下载文件内容到终端1$ curl baidu.com 123&lt;html&gt;&lt;meta http-equiv="refresh" content="0;url=http://www.baidu.com/"&gt;&lt;/html&gt; 下载文件到指定文件12$ curl baidu.com -o baidu.html$ cat baidu.html 123&lt;html&gt;&lt;meta http-equiv="refresh" content="0;url=http://www.baidu.com/"&gt;&lt;/html&gt; 下载文件到默认文件123$ curl https://nodejs.org/dist/v8.12.0/node-v8.12.0.pkg -O$ ls node-v8.12.0.pkgnode-v8.12.0.pkg 查看返回头信息1$ curl -i baidu.com 12345678910111213141516HTTP/1.1 200 OKDate: Sat, 20 Oct 2018 14:30:47 GMTServer: ApacheLast-Modified: Tue, 12 Jan 2010 13:48:00 GMTETag: &quot;51-47cf7e6ee8400&quot;Accept-Ranges: bytesContent-Length: 81Cache-Control: max-age=86400Expires: Sun, 21 Oct 2018 14:30:47 GMTConnection: Keep-AliveContent-Type: text/htmlProxy-Connection: keep-alive&lt;html&gt;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://www.baidu.com/&quot;&gt;&lt;/html&gt; 查看请求的整个过程1$ curl -v baidu.com 12345678910111213141516171819202122232425* Rebuilt URL to: baidu.com/* Trying 123.125.115.110...* TCP_NODELAY set* Connected to baidu.com (123.125.115.110) port 80 (#0)&gt; GET / HTTP/1.1&gt; Host: baidu.com&gt; User-Agent: curl/7.54.0&gt; Accept: */*&gt; &lt; HTTP/1.1 200 OK&lt; Date: Sat, 20 Oct 2018 14:40:22 GMT&lt; Server: Apache&lt; Last-Modified: Tue, 12 Jan 2010 13:48:00 GMT&lt; ETag: &quot;51-47cf7e6ee8400&quot;&lt; Accept-Ranges: bytes&lt; Content-Length: 81&lt; Cache-Control: max-age=86400&lt; Expires: Sun, 21 Oct 2018 14:40:22 GMT&lt; Connection: Keep-Alive&lt; Content-Type: text/html&lt; &lt;html&gt;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://www.baidu.com/&quot;&gt;&lt;/html&gt;* Connection #0 to host baidu.com left intact 发送 Post 请求不带参数1$ curl -X POST baidu.com form形式将以 Content-Type: application/x-www-form-urlencoded 形式提交 1$ curl -X POST -d 'a=b' baidu.com json形式将以 Content-Type: application/json 形式提交 1$ curl -X POST baidu.com -H 'content-type: application/json' -d '&#123;"a":"b"&#125;' 发送其他 method 请求如果你们公司也在用 restful api ，很幸运的是 curl 会是一个好帮手 1234$ curl -X GET baidu.com$ curl -X POST baidu.com$ curl -X PUT baidu.com$ curl -X DELETE baidu.com 发送带自定义 header 请求1$ curl -X POST -H 'custom-key: custom-value' baidu.com 查看当前 ip这算是一个非常实用的技巧了，因为我这里开了代理，所以网络 ip 显示的是美国 12$ curl ip.cn当前 IP：138.128.193.*** 来自：美国 pingping(packet internet groper)通过发送icmp(internet control messages protocol)协议包查看当前机器和目标机器的连通性，mac上面如果不指定 ping 次数，则会一直执行 1$ ping baidu.com ctrl-c 强行停止1234567PING baidu.com (123.125.115.110): 56 data bytes64 bytes from 123.125.115.110: icmp_seq=0 ttl=55 time=111.843 ms64 bytes from 123.125.115.110: icmp_seq=1 ttl=55 time=113.706 ms64 bytes from 123.125.115.110: icmp_seq=2 ttl=55 time=26.261 ms64 bytes from 123.125.115.110: icmp_seq=3 ttl=55 time=25.522 ms64 bytes from 123.125.115.110: icmp_seq=4 ttl=55 time=26.935 ms... 通过 -c 指定执行次数 1$ ping -c3 baidu.com 12345678PING baidu.com (123.125.115.110): 56 data bytes64 bytes from 123.125.115.110: icmp_seq=0 ttl=55 time=232.282 ms64 bytes from 123.125.115.110: icmp_seq=1 ttl=55 time=44.364 ms64 bytes from 123.125.115.110: icmp_seq=2 ttl=55 time=38.667 ms--- baidu.com ping statistics ---3 packets transmitted, 3 packets received, 0.0% packet lossround-trip min/avg/max/stddev = 38.667/105.104/232.282/89.958 ms 执行结束会一段对本次所以请求的汇报，发送了多少次包，多少返回了，多少丢失了，round-trip time 时间 最短/平均/最长/标准差 traceroutetraceroute 其实也是发送 icmp 协议报文查看到达目标 ip 中间经过所有的路由信息 1$ traceroute www.baidu.com 结果如下123456traceroute: Warning: www.baidu.com has multiple addresses; using 61.135.169.121traceroute to www.a.shifen.com (61.135.169.121), 64 hops max, 52 byte packets 1 * * * 2 * * * 3 * * * 4 * * * 尴尬的是后面直接星号了，因为大多数网关都禁止对 icmp 报文作出响应]]></content>
      <categories>
        <category>开发笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[定制博客]]></title>
    <url>%2Fp%2F4e.html</url>
    <content type="text"><![CDATA[虽然默认的 next 主题已经很美了，但是网上有一堆对 next 进行定制的教程，本着优雅不炫技的原则，我对博客作了以下简单的优化： 添加 hexo-admin 插件hexo-admin 为一套hexo 博客管理工具，我准备将博客的开发环境也部署到服务器上，这样就不用开本地环境，有了它就可以在线编辑博客了，非常方便。 安装依赖库 1$ npm install --save hexo-admin 启动本地博客，并在浏览器打开 12$ hexo s $ open http://localhost:4000/admin 如果不出错的话 admin 界面就已经展现在眼前，但是很多时候想配置账户密码去登录到这个管理后台，就需要接着配置 在 admin 的界面 ,前往Settings &gt;Setup authentification 可以看到Username,Password,Secret ，输入自己心仪的账户密码以及秘钥，拷贝 hexo-admin authentification 下的内容 在博客根目录下的 _config.yml 最底下粘贴如下配置 1234admin: username: admin password_hash: $2a$10$L.XAIqIWgTc5S1zpvV3MEu7/rH34p4Is/nq824smv8EZ3lIPCp1su secret: wobuhuigaosunide 重新执行第 2 步，发现这时候已经需要登录，输入配置中的账号和密码即可 添加 分类 和 标签每篇文章可以有一个分类和多个标签，这也是分类和标签的最大的区别。 创建 分类 选项 生成 分类 页并添加属性type 1$ hexo new page categories 找到上面提示的 index.md 文件路径 ，打开发现是这样 1234---title: categoriesdate: 2018-10-17 00:33:17--- 将其修改为 12345---title: 分类date: 2018-10-17 00:33:17type: "categories"--- 博客根目录下依次打开 source &gt;_post 找一篇博客打开，顶部有一些文章的配置信息，为 categories 字段添加属性 123456title: Hello Worldabbrlink: 3eebtags: []categories: 随笔date: 2018-10-15 16:27:00--- 一篇文章只有一个分类，如果需要二级分类的话可以如下修改，可以参考hexo 分类和标签 12345678title: Hello Worldabbrlink: 3eebtags: []categories: - web开发- rubydate: 2018-10-15 16:27:00--- 创建 标签 选项 生成 标签 页并添加属性type 1$ hexo new page tags 找到上面提示的 index.md 文件路径 ，打开发现是这样 1234---title: tagsdate: 2018-10-20 14:33:17--- 将其修改为 12345---title: 标签date: 2018-10-20 14:33:17type: "tags"--- 博客根目录下依次打开 source &gt;_post 找一篇博客打开，顶部有一些文章的配置信息，为 tags 字段添加属性 123456789title: Hello Worldabbrlink: 3eebtags: - hexo - hexo-admincategories: - 随笔date: 2018-10-15 16:27:00--- 打开上面的文章底部，就可以看到标签 添加加载进度条修改 pace: true 并设置自己喜欢的 pace_theme，可以每个都测试一下 12pace: truepace_theme: pace-theme-flash 添加赞赏 修改自己的微信或者支付宝的图片 12345# Rewardreward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！#wechatpay: /images/wechatpay.jpgalipay: /images/alipay.png#bitcoin: /images/bitcoin.png 但是打开发现赞赏的按钮上面的文字是 Donate,看着很奇怪，编辑 themes/next/layout/_macro/reward.swig 文件中第 4 行，将 Donate 修改为 赏 首页文章添加阅读全文阅读原文有两种方法可以实现，一种是自动，根据文字长度自动切割，另一种是手动的，添加 more 标签，则此标签以下就会被隐藏掉 自动，编辑 _config.yml，指定文字长度，默认是150 123auto_excerpt:enable: truelength: 150 手动，打开任意文章，在文章的任意行插入 &lt;!-- more --&gt; 观察效果]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[自定义GitHubPages的域名]]></title>
    <url>%2Fp%2Fa916.html</url>
    <content type="text"><![CDATA[今天在配置 githubpages 自定义域名的时候怎么也连不通，通过搜素发现需要在 git 项目根目录下setting，配置Custom domain为自己的自定义域名，这时 github 配置了一个临时的CNAME。 1hexo d 重新部署之后，github 又会将Custom domain置为空，所以找到最终结局方法，在 hexo 项目的source目录下添加 CNAME 的文件，文件内容为自定义的域名：如 blog.zoulux.top]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>部署</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何优雅的删除git子模块]]></title>
    <url>%2Fp%2Fb63b.html</url>
    <content type="text"><![CDATA[git submodule deinit $mod // 逆初始化 git rm –cached $mode // 删除子模块缓存信息 git commit -am “Remove a $mode.” // 提交更改]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fp%2F3eeb.html</url>
    <content type="text"><![CDATA[Welcome欢迎来到我的博客，希望我能勤快点，每周一更！ 每学一门新语言的时候，我们总是希望能在控制台中快速输出Hello world，这次也不理外。 世界，你好，我来了！ 业精于勤荒于嬉，行成于思毁于随。共勉！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
</search>
